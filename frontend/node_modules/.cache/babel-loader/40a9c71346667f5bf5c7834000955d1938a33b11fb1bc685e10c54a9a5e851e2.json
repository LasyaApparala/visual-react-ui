{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Token added to request headers'); // Debug\n  } else {\n    console.warn('No token found in localStorage'); // Debug\n  }\n  return config;\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.log('Authentication error, redirecting to login');\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const taskAPI = {\n  createTask: taskData => {\n    console.log('Creating task with data:', taskData); // Debug\n    return api.post('/tasks', taskData);\n  }\n  // ... other methods\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","console","log","warn","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","taskAPI","createTask","taskData","post"],"sources":["C:/Users/lasya/Videos/visual-react-ui/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n    console.log('Token added to request headers'); // Debug\r\n  } else {\r\n    console.warn('No token found in localStorage'); // Debug\r\n  }\r\n  return config;\r\n});\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      console.log('Authentication error, redirecting to login');\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const taskAPI = {\r\n  createTask: (taskData) => {\r\n    console.log('Creating task with data:', taskData); // Debug\r\n    return api.post('/tasks', taskData);\r\n  },\r\n  // ... other methods\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC5C,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;IAChDK,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;EACjD,CAAC,MAAM;IACLD,OAAO,CAACE,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC;EAClD;EACA,OAAOR,MAAM;AACf,CAAC,CAAC;;AAEF;AACAT,GAAG,CAACM,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzDL,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMS,OAAO,GAAG;EACrBC,UAAU,EAAGC,QAAQ,IAAK;IACxBf,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEc,QAAQ,CAAC,CAAC,CAAC;IACnD,OAAO9B,GAAG,CAAC+B,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;EACrC;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}